/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.bfds.ach.web.domain;

import static com.bfds.ach.repository.support.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.bfds.ach.domain.UserAccount;
import com.bfds.ach.domain.UserAccount_;
import com.bfds.ach.repository.support.PropertySelector;
import com.bfds.ach.repository.support.SearchParameters;
import com.bfds.ach.web.domain.support.GenericSearchForm;
import com.bfds.ach.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link UserAccount}.
 * It exposes a {@link UserAccount} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class UserAccountSearchForm extends GenericSearchForm<UserAccount, Long, UserAccountSearchForm> {
    private static final long serialVersionUID = 1L;
    protected UserAccount userAccount = new UserAccount();
    protected PropertySelector<UserAccount, String> passwordSelector = newPropertySelector(UserAccount_.password);
    protected PropertySelector<UserAccount, String> userNameSelector = newPropertySelector(UserAccount_.userName);

    public UserAccount getUserAccount() {
        return userAccount;
    }

    @Override
    protected UserAccount getEntity() {
        return getUserAccount();
    }

    @Override
    public UserAccountSearchForm newInstance() {
        return new UserAccountSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(passwordSelector, userNameSelector);
        return sp;
    }

    @Override
    public void resetWithOther(UserAccountSearchForm other) {
        this.userAccount = other.getUserAccount();
        this.passwordSelector = other.getPasswordSelector();
        this.userNameSelector = other.getUserNameSelector();
    }

    // Property selectors
    public PropertySelector<UserAccount, String> getPasswordSelector() {
        return passwordSelector;
    }

    public PropertySelector<UserAccount, String> getUserNameSelector() {
        return userNameSelector;
    }
}
