/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.bfds.ach.web.domain;

import static com.bfds.ach.repository.support.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.bfds.ach.domain.UserRole;
import com.bfds.ach.domain.UserRole_;
import com.bfds.ach.repository.support.PropertySelector;
import com.bfds.ach.repository.support.SearchParameters;
import com.bfds.ach.web.domain.support.GenericSearchForm;
import com.bfds.ach.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link UserRole}.
 * It exposes a {@link UserRole} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class UserRoleSearchForm extends GenericSearchForm<UserRole, Long, UserRoleSearchForm> {
    private static final long serialVersionUID = 1L;
    protected UserRole userRole = new UserRole();
    protected PropertySelector<UserRole, String> roleNameSelector = newPropertySelector(UserRole_.roleName);

    public UserRole getUserRole() {
        return userRole;
    }

    @Override
    protected UserRole getEntity() {
        return getUserRole();
    }

    @Override
    public UserRoleSearchForm newInstance() {
        return new UserRoleSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(roleNameSelector);
        return sp;
    }

    @Override
    public void resetWithOther(UserRoleSearchForm other) {
        this.userRole = other.getUserRole();
        this.roleNameSelector = other.getRoleNameSelector();
    }

    // Property selectors
    public PropertySelector<UserRole, String> getRoleNameSelector() {
        return roleNameSelector;
    }
}
